# PROFILES
spring.profiles.active=dev

  

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=default
spring.jpa.show-sql=true

spring.datasource.continue-on-error=false
spring.datasource.generate-unique-name=false

#app.datasource.url=jdbc:derby:mydb;create=true
#app.jpa.properties.hibernate.dialect=org.hibernate.dialect.DerbyTenSevenDialect
#app.jpa.hibernate.ddl-auto=create-drop

# Um das Zertifikat zu erstellen:
# keytool -genkey -alias tomcat -storetype PKCS12 -keyalg RSA -keysize 2048  -keystore https.p12 -validity 3650 -dname "cn=User, ou=Entwicklung, o=Ort, c=DE" -ext san=uri:https://localhost:9013
# Eigenschaft des Chrome:  chrome://flags/#allow-insecure-localhost
# curl -X POST --user user:password  --insecure https://localhost:9013/api/usera

server.port: 9013
server.ssl.key-store: https.p12
server.ssl.key-store-password: password
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: tomcat

# logging ein
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.services=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.tho.nill.datenlieferung.SecurityController=DEBUG



security.ignored=*.bundle.*
spring.security.user.name=user
spring.security.user.password=password


daten.path.original=target/original
daten.path.verschl=target/verschl

sftp.user=tnill
sftp.password=password
sftp.port=22
sftp.host=localhost

smtp.user=tnill
smtp.password=password
smtp.port=25
smtp.host=localhost
smtp.to=test@ziel
smtp.from=test@quelle


pop3.user=tnill
pop3.password=password
pop3.port=110
pop3.host=localhost
pop3.to=test@ziel
pop3.from=test@quelle

